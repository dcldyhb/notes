\frametitle{二叉树类定义}
\begin{codeblock}
template <class T>
class binaryTree {
private:
    struct Node {
        T data;
        Node *left, *right;
        Node(T item, Node *L = nullptr, Node *R = nullptr) : data(item), left(L), right(R) {}
    };
    Node *root;

public:
    void preOrder() const { preOrder(root); } // 前序遍历
    void inOrder() const { inOrder(root); }   // 中序遍历
    void postOrder() const { postOrder(root); } // 后序遍历

private:
    void preOrder(Node *t) const;
    void inOrder(Node *t) const;
    void postOrder(Node *t) const;
};
    \end{codeblock}
    \begin{itemize}
        \item 二叉树遍历算法体现递归思想
        \item 可通过队列实现层序遍历
    \end{itemize}
